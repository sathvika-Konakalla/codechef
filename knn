#KNN Classification
import pandas as pd
data=pd.read_csv("iris.csv")
x=data.iloc[:,:-1].values
y=data.iloc[:,-1].values
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)
from sklearn.neighbors import KNeighborsClassifier
model=KNeighborsClassifier(n_neighbors=3)
model.fit(x_train,y_train)
ypred=model.predict(x_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,ypred)*100) 


#KNN Regression
import pandas as pd
file=pd.read_csv("Student_Performance.csv")
x=file.iloc[:,:-1].values
y=file.iloc[:,-1].values
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.4,random_state=0)
from sklearn.neighbors import KNeighborsRegressor
model=KNeighborsRegressor(n_neighbors=9)
model.fit(x_train,y_train)
ypred=model.predict(x_test)
from sklearn.metrics import mean_squared_error 
print(mean_squared_error(y_test,ypred)) 

#RF Regression
import pandas as pd
data=pd.read_csv("car_evaluation.csv")
columns=["1","2","3","4","5","6","Target"] 
data.columns=columns
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
data['1']=le.fit_transform(data['1'])
data['2']=le.fit_transform(data['2'])
data['3']=le.fit_transform(data['3'])
data['4']=le.fit_transform(data['4'])
data['5']=le.fit_transform(data['5'])
data['6']=le.fit_transform(data['6'])
data['Target']=le.fit_transform(data['Target'])
x=data.drop("Target",axis=1) 
y=data["Target"]
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=1) 
from sklearn.ensemble import RandomForestRegressor
rf=RandomForestRegressor()
rf.fit(x_train,y_train)
ypred=rf.predict(x_test)
from sklearn.metrics import r2_score
print(r2_score(y_test,ypred))


#naive bayes Classification
import pandas as pd
data=pd.read_csv("Diabetes.csv")
x=data.drop("diabetes",axis=1)
y=data["diabetes"]
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=1)
from sklearn.naive_bayes import GaussianNB
gn=GaussianNB()
gn.fit(x_train,y_train)
ypred=gn.predict(x_test)
from sklearn.metrics import accuracy_score
ac=accuracy_score(ypred,y_test)
print(ac*100)

#SVM Classifier
import pandas as pd
data=pd.read_csv("heart.csv")
x=data.iloc[:,0:1].values
y=data.iloc[:,1].values
from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.2, random_state=0)
from sklearn.svm import SVC
classifier=SVC(kernel='linear')
classifier.fit(xtrain,ytrain)
ypred=classifier.predict(xtest)
from sklearn.metrics import accuracy_score
print(accuracy_score(ytest,ypred)*100)
